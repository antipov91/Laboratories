//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CircuitEntity
{
	public Laboratories.Components.Circuit.ScopeSignalComponent ScopeSignal { get { return (Laboratories.Components.Circuit.ScopeSignalComponent)GetComponent(CircuitComponentsLookup.ScopeSignal); } }
	public bool HasScopeSignal { get { return HasComponent(CircuitComponentsLookup.ScopeSignal); } }

	public void AddScopeSignal(float newTimeWindow, System.Collections.Generic.Queue<Laboratories.Devices.SignalFrame> newQueue, float newCurrentTime)
	{
		var index = CircuitComponentsLookup.ScopeSignal;
		var component = (Laboratories.Components.Circuit.ScopeSignalComponent)CreateComponent(index, typeof(Laboratories.Components.Circuit.ScopeSignalComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.timeWindow = newTimeWindow;
		component.queue = newQueue;
		component.currentTime = newCurrentTime;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceScopeSignal(float newTimeWindow, System.Collections.Generic.Queue<Laboratories.Devices.SignalFrame> newQueue, float newCurrentTime)
	{
		var index = CircuitComponentsLookup.ScopeSignal;
		var component = (Laboratories.Components.Circuit.ScopeSignalComponent)CreateComponent(index, typeof(Laboratories.Components.Circuit.ScopeSignalComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.timeWindow = newTimeWindow;
		component.queue = newQueue;
		component.currentTime = newCurrentTime;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyScopeSignalTo(Laboratories.Components.Circuit.ScopeSignalComponent copyComponent)
	{
		var index = CircuitComponentsLookup.ScopeSignal;
		var component = (Laboratories.Components.Circuit.ScopeSignalComponent)CreateComponent(index, typeof(Laboratories.Components.Circuit.ScopeSignalComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.timeWindow = copyComponent.timeWindow;
		component.queue = copyComponent.queue;
		component.currentTime = copyComponent.currentTime;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveScopeSignal()
	{
		RemoveComponent(CircuitComponentsLookup.ScopeSignal);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CircuitMatcher
{
	static JCMG.EntitasRedux.IMatcher<CircuitEntity> _matcherScopeSignal;

	public static JCMG.EntitasRedux.IMatcher<CircuitEntity> ScopeSignal
	{
		get
		{
			if (_matcherScopeSignal == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<CircuitEntity>)JCMG.EntitasRedux.Matcher<CircuitEntity>.AllOf(CircuitComponentsLookup.ScopeSignal);
				matcher.ComponentNames = CircuitComponentsLookup.ComponentNames;
				_matcherScopeSignal = matcher;
			}

			return _matcherScopeSignal;
		}
	}
}
