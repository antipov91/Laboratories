//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

	public GameEntity CameraEntity { get { return GetGroup(GameMatcher.Camera).GetSingleEntity(); } }
	public Laboratories.Components.Game.CameraComponent Camera { get { return CameraEntity.Camera; } }
	public bool HasCamera { get { return CameraEntity != null; } }

	public GameEntity SetCamera(UnityEngine.Camera newInstance)
	{
		if (HasCamera)
		{
			throw new JCMG.EntitasRedux.EntitasReduxException(
				"Could not set Camera!\n" +
				this +
				" already has an entity with Laboratories.Components.Game.CameraComponent!",
				"You should check if the context already has a CameraEntity before setting it or use context.ReplaceCamera().");
		}
		var entity = CreateEntity();
		#if !ENTITAS_REDUX_NO_IMPL
		entity.AddCamera(newInstance);
		#endif
		return entity;
	}

	public void ReplaceCamera(UnityEngine.Camera newInstance)
	{
		#if !ENTITAS_REDUX_NO_IMPL
		var entity = CameraEntity;
		if (entity == null)
		{
			entity = SetCamera(newInstance);
		}
		else
		{
			entity.ReplaceCamera(newInstance);
		}
		#endif
	}

	public void RemoveCamera()
	{
		CameraEntity.Destroy();
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public Laboratories.Components.Game.CameraComponent Camera { get { return (Laboratories.Components.Game.CameraComponent)GetComponent(GameComponentsLookup.Camera); } }
	public bool HasCamera { get { return HasComponent(GameComponentsLookup.Camera); } }

	public void AddCamera(UnityEngine.Camera newInstance)
	{
		var index = GameComponentsLookup.Camera;
		var component = (Laboratories.Components.Game.CameraComponent)CreateComponent(index, typeof(Laboratories.Components.Game.CameraComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.instance = newInstance;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceCamera(UnityEngine.Camera newInstance)
	{
		var index = GameComponentsLookup.Camera;
		var component = (Laboratories.Components.Game.CameraComponent)CreateComponent(index, typeof(Laboratories.Components.Game.CameraComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.instance = newInstance;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyCameraTo(Laboratories.Components.Game.CameraComponent copyComponent)
	{
		var index = GameComponentsLookup.Camera;
		var component = (Laboratories.Components.Game.CameraComponent)CreateComponent(index, typeof(Laboratories.Components.Game.CameraComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.instance = copyComponent.instance;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveCamera()
	{
		RemoveComponent(GameComponentsLookup.Camera);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherCamera;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> Camera
	{
		get
		{
			if (_matcherCamera == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.Camera);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherCamera = matcher;
			}

			return _matcherCamera;
		}
	}
}
