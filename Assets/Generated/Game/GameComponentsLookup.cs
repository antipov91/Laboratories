//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using JCMG.EntitasRedux;

public static class GameComponentsLookup
{
	public const int HighlightAddedListener = 0;
	public const int Camera = 1;
	public const int CameraMovementFX = 2;
	public const int Highlight = 3;
	public const int Id = 4;
	public const int Name = 5;
	public const int Player = 6;
	public const int Speed = 7;
	public const int Transform = 8;
	public const int View = 9;
	public const int CharacterController = 10;

	public const int TotalComponents = 11;

	public static readonly string[] ComponentNames =
	{
		"HighlightAddedListener",
		"Camera",
		"CameraMovementFX",
		"Highlight",
		"Id",
		"Name",
		"Player",
		"Speed",
		"Transform",
		"View",
		"CharacterController"
	};

	public static readonly System.Type[] ComponentTypes =
	{
		typeof(HighlightAddedListenerComponent),
		typeof(Laboratories.Components.Game.CameraComponent),
		typeof(Laboratories.Components.Game.CameraMovementFXComponent),
		typeof(Laboratories.Components.Game.HighlightComponent),
		typeof(Laboratories.Components.Game.IdComponent),
		typeof(Laboratories.Components.Game.NameComponent),
		typeof(Laboratories.Components.Game.PlayerComponent),
		typeof(Laboratories.Components.Game.SpeedComponent),
		typeof(Laboratories.Components.Game.TransformComponent),
		typeof(Laboratories.Components.Game.ViewComponent),
		typeof(Laboratories.Game.CharacterControllerComponent)
	};

	public static readonly Dictionary<Type, int> ComponentTypeToIndex = new Dictionary<Type, int>
	{
		{ typeof(HighlightAddedListenerComponent), 0 },
		{ typeof(Laboratories.Components.Game.CameraComponent), 1 },
		{ typeof(Laboratories.Components.Game.CameraMovementFXComponent), 2 },
		{ typeof(Laboratories.Components.Game.HighlightComponent), 3 },
		{ typeof(Laboratories.Components.Game.IdComponent), 4 },
		{ typeof(Laboratories.Components.Game.NameComponent), 5 },
		{ typeof(Laboratories.Components.Game.PlayerComponent), 6 },
		{ typeof(Laboratories.Components.Game.SpeedComponent), 7 },
		{ typeof(Laboratories.Components.Game.TransformComponent), 8 },
		{ typeof(Laboratories.Components.Game.ViewComponent), 9 },
		{ typeof(Laboratories.Game.CharacterControllerComponent), 10 }
	};

	/// <summary>
	/// Returns a component index based on the passed <paramref name="component"/> type; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="component"></param>
	public static int GetComponentIndex(IComponent component)
	{
		return GetComponentIndex(component.GetType());
	}

	/// <summary>
	/// Returns a component index based on the passed <paramref name="componentType"/>; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="componentType"></param>
	public static int GetComponentIndex(Type componentType)
	{
		return ComponentTypeToIndex.TryGetValue(componentType, out var index) ? index : -1;
	}
}
